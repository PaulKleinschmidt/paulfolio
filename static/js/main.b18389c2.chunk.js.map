{"version":3,"sources":["theme/colors.ts","Me/styles.ts","Shared/Styles.tsx","Projects/styles.ts","Me/Me.tsx","Work/Styles.ts","Work/Job.tsx","Work/Work.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["colors","styled","div","MyName","MyJob","About","Icons","SectionWrapper","props","width","Section","Box","color","Link","a","img","IconLink","spacingRight","Me","href","size","icon","faLinkedinIn","faGithub","faCodepen","faEnvelope","faFileAlt","Header","JobHeader","JobName","JobTimeline","Position","Tech","Job","job","useState","isExpanded","setIsExpanded","className","key","name","onClick","link","timeline","position","tech","jobs","Work","map","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b18389c2.chunk.js","sourcesContent":["export const colors = {\n  black: '#363030',\n  orange: '#ffa500'\n}\n","\n\nimport styled from 'styled-components';\nimport { colors } from '../theme';\n\n\nexport const Header = styled.div`\n  margin: 100px;\n  margin-right: 50px;\n`\n\nexport const Divider = styled.div`\n  margin-top: 30vh;\n  height: 100px;\n  border: 4px solid #328de3;\n\n  @media (max-width: 900px) {\n    display: none;\n  }\n`\n\nexport const MyName = styled.div`\n  text-align: left;\n  font-family: 'Questrial', sans-serif;\n  font-size: 40px;\n  font-weight: 700;\n  margin-top: 30vh;\n  margin-bottom: 4px;\n  color: ${colors.black};\n`\n\nexport const MyJob = styled.div`\n  font-size: 30px;\n  margin: auto;\n  text-align: left;\n  font-weight: 100;\n  margin-top: 0px !important;\n`\n\nexport const About = styled.div`\n  margin-top: 150px;\n  font-size: 20px;\n  text-align: left;\n  line-height: 2;\n`\n\nexport const Hi = styled.div`\n  font-size: 24px;\n  margin-bottom: 20px;\n`\n\nexport const Icons = styled.div`\n  cursor: pointer;\n  margin-top: 40px;\n  width: 200px;\n  display: flex;\n  justify-content: space-between;\n  margin: 40px 0 0;\n  color: ${colors.black};\n\n  svg {\n    transition: all .1s ease-in-out;\n\n    &:hover {\n      color: ${colors.orange};\n    }\n  }\n`\n","import styled from 'styled-components';\nimport { colors } from '../theme';\n\nexport const SectionWrapper = styled.div<{ width?: string }>`\n  ${(props) => `width: ${props.width || '100%'};`}\n  max-width: 1000px;\n  margin: 100px auto 20px;\n  height: auto;\n  @media (max-width: 900px) {\n    width: 100%;\n  }\n`;\n\nexport const Section = styled.div<{ width?: string }>`\n  margin: 50px;\n  margin-right: 50px;\n  margin-bottom: 100px;\n  ${(props) => props.width && `width: ${props.width};`}\n\n  @media (max-width: 900px) {\n    margin-left: 0;\n    margin-right: 0;\n  }\n`;\n\nexport const Box = styled.div`\n  padding-bottom: 20px;\n  padding-top: 10px;\n  border-bottom: 4px solid ${(props) => props.color};\n  background-color: beige;\n  transition: max-height 0.5s cubic-bezier(0, 1, 0, 1), transform 0.1s ease-in-out;\n  margin-bottom: 20px;\n`;\n\nexport const Link = styled.a`\n  cursor: pointer;\n  margin-right: 20px;\n  text-decoration: none;\n  color: ${colors.black};\n  border-bottom: 2px solid ${colors.black};\n  font-size: 20px;\n  font-weight: bold;\n  transition: all 0.1s ease-in-out;\n\n  &:hover {\n    color: ${(props) => props.color};\n    border-color: ${(props) => props.color};\n  }\n`;\n","import styled from \"styled-components\";\nimport { colors } from \"../theme\";\n\nexport const Header = styled.div`\n  font-family: 'Questrial', sans-serif;\n  font-size: 40px;\n  font-weight: 700;\n  margin: auto;\n  text-align: left;\n  margin-bottom: 40px;\n  color: ${colors.black};\n`\n\nexport const ProjectName = styled.div`\n  font-size: 22px;\n  margin-bottom: 20px;\n`\n\nexport const ProjectDescription = styled.div`\n  line-height: 1.5em;\n  margin-bottom: 40px;\n  font-size: 20px;\n  a {\n    transition: all .1s ease-in-out;\n    text-decoration: none;\n    color: ${colors.black};\n    font-weight: bold;\n    border-bottom: 2px solid ${colors.black};\n  }\n`\n\nexport const ProjectImage = styled.img`\n  height: 120px;\n  width: 120px;\n  margin-left: 5px;\n`\n\nexport const IconLink = styled.a<{spacingRight?: string;}>`\n  ${props => props.spacingRight && `margin-right: ${props.spacingRight};`}\n  cursor: pointer;\n  text-decoration: none;\n  color: ${colors.black};\n  font-size: 18px;\n  font-weight: bold;\n  transition: all .1s ease-in-out;\n\n  &:hover {\n    color: ${props => props.color};\n  }\n`\n\n\n","import React from 'react';\nimport { MyName, MyJob, About, Hi, Icons } from './styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelope, faFileAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faLinkedinIn, faGithub, faCodepen } from '@fortawesome/free-brands-svg-icons'\nimport { Section } from '../Shared/Styles';\nimport { IconLink } from '../Projects/styles';\nimport { colors } from '../theme';\n\nexport const Me = () => {\n  return (\n    <Section>\n      <MyName>PAUL KLEINSCHMIDT</MyName>\n      <MyJob>Software Engineer</MyJob>\n      <Icons>\n        <IconLink color={colors.black} href=\"https://www.linkedin.com/in/paul-k/\">\n          <FontAwesomeIcon size=\"lg\" icon={faLinkedinIn} />\n        </IconLink>\n        <IconLink color={colors.black} href=\"https://www.github.com/paulkleinschmidt/\">\n          <FontAwesomeIcon size=\"lg\" icon={faGithub} />\n        </IconLink>\n        <IconLink color={colors.black} href=\"https://codepen.io/tall_paul\">\n          <FontAwesomeIcon size=\"lg\" icon={faCodepen} />\n        </IconLink>\n        <IconLink color={colors.black} href=\"mailto:paul.kleinschmidt96@gmail.com\">\n          <FontAwesomeIcon size=\"lg\" icon={faEnvelope} />\n        </IconLink>\n        <IconLink color={colors.black} href=\"https://drive.google.com/file/d/1ujqcKvE0t3zKGssGrMpEI_Z9_UfBoQSs/view?usp=sharing\">\n          <FontAwesomeIcon size=\"lg\" icon={faFileAlt} />\n        </IconLink>\n      </Icons>\n\n      <About>\n        Welcome to my website! I'm a software engineer that enjoys creating unique and engaging user experiences. Lately I have been working mostly with React, Typescript, and Serverless, but I love learning new technologies. For example, I recently have been learning about functional programming. <br/><br/>\n        I'm currently building embeddable widgets, dashboards, and tracking systems at Full Beaker. Before that, I worked as a full stack engineer at a health tech startup. <br/><br/>\n        In my free time, I enjoy creating electronic music and playing jazz guitar. I am always interested in side projects and collaborations. Feel free to reach out if you would like to talk about code and/or music.\n      </About>\n    </Section>\n  );\n}\n\n","import styled from \"styled-components\";\nimport { colors } from \"../theme\";\n\nexport const Header = styled.div`\n  font-family: 'Questrial', sans-serif;\n  font-size: 40px;\n  font-weight: 700;\n  margin: auto;\n  text-align: left;\n  margin-bottom: 40px;\n  color: ${colors.black};\n`\n\nexport const JobHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 4px;\n`\n\nexport const JobName = styled.div`\n  font-size: 20px;\n  color: ${colors.black};\n`\n\nexport const JobTimeline = styled.div`\n`\n\nexport const Position = styled.div`\n  margin: 8px 0 20px 0;\n  font-size: 20px;\n  font-weight: bold;\n`\n\nexport const Tech = styled.div`\n  font-size: 20px;\n`\n\nexport const JobDescription = styled.div`\n  margin-top: 30px;\n`\n\n","import React, { useState } from 'react';\nimport { Box, Link } from '../Shared/Styles';\nimport { colors } from '../theme';\nimport {\n  JobName,\n  JobTimeline,\n  JobHeader,\n  Tech,\n  Position\n} from './Styles';\nimport { TJob } from './types';\n\ntype Props = {\n  job: TJob;\n};\n\nexport const Job = ({ job }: Props) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const expand = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return (\n    <Box\n      className={isExpanded ? 'expanded' : ''}\n      color={colors.orange}\n      key={job.name}\n      onClick={expand}\n    >\n      <JobHeader>\n        <JobName>\n          <Link href={job.link} color={colors.orange}>\n            {job.name}\n          </Link>\n        </JobName>\n        <JobTimeline>{job.timeline}</JobTimeline>\n      </JobHeader>\n      <Position>{job.position}</Position>\n      <Tech>\n        <strong>Tech:</strong> {job.tech}\n      </Tech>\n    </Box>\n  );\n};\n","import React, { useState } from 'react';\nimport { Section, Box, Link } from '../Shared/Styles';\nimport { Job } from './Job';\nimport {\n  Header,\n} from './Styles';\n\nconst jobs = [\n  {\n    name: 'Full Beaker',\n    link: 'http://www.fullbeaker.com',\n    position: 'Full Stack Engineer',\n    timeline: 'Oct 2019 - Present',\n    tech: 'React, Typescript, Redux, Serverless, Node, Express',\n  },\n  {\n    name: 'Censinet',\n    link: 'http://www.censinet.com',\n    position: 'Software Engineer',\n    timeline: 'Feb 2018 - Oct 2019',\n    tech: 'React, Typescript, Redux, Ruby on Rails',\n  },\n];\n\nexport const Work = () => (\n  <Section>\n    <Header>WORK</Header>\n    {jobs.map((job) => (\n      <Job job={job} />\n    ))}\n  </Section>\n);\n","import React from 'react';\nimport './App.css';\nimport { Me } from './Me/Me';\nimport { Work } from './Work/Work';\nimport { SectionWrapper } from './Shared/Styles';\nimport { Projects } from './Projects/Projects';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SectionWrapper>\n        <Me/>\n        <Work/>\n        {/* <Projects/> */}\n      </SectionWrapper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}